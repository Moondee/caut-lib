#include"../caut.h"
/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is true */

//#line 7 "../caut.h"
extern void _cf__getInput(unsigned long addr ) ;
//#line 3 "mcdc_test.c"
int foo(int x , int y ) 
{ 


  {
  set_main_function_id(0);
  para_pop((unsigned long )(& x));
  para_pop((unsigned long )(& y));
  {
//#line 5
  cover_condition_fun(1, x - 0, 14);
//#line 5
  if (x != 0) {
//#line 5
    load_to_heap_int((unsigned long )(& x), (long )x, 11);
//#line 5
    load_to_heap_int(0UL, 0, 11);
//#line 5
    apply_op(1, 14);
//#line 5
    branch(5, 1, 1, 0);
    {
//#line 5
    cover_condition_fun(2, y - 3, 11);
//#line 5
    if (y > 3) {
//#line 5
      load_to_heap_int((unsigned long )(& y), (long )y, 11);
//#line 5
      load_to_heap_int(0UL, 3, 11);
//#line 5
      apply_op(1, 11);
//#line 5
      branch(5, 2, 1, 0);
//#line 7
      load_to_heap_int((unsigned long )(& y), (long )y, 11);
//#line 7
      load_to_heap_int(0UL, 1, 11);
//#line 7
      apply_op(2, 21);
//#line 7
      store_to_var_table((unsigned long )(& y));
//#line 7
      y ++;
//#line 7
      store_concrete_value_int((long )y);
    } else {
//#line 5
      load_to_heap_int((unsigned long )(& y), (long )y, 11);
//#line 5
      load_to_heap_int(0UL, 3, 11);
//#line 5
      apply_op(1, 11);
//#line 5
      branch(5, 2, 0, 0);
//#line 11
      load_to_heap_int((unsigned long )(& y), (long )y, 11);
//#line 11
      load_to_heap_int(0UL, 1, 11);
//#line 11
      apply_op(2, 22);
//#line 11
      store_to_var_table((unsigned long )(& y));
//#line 11
      y --;
//#line 11
      store_concrete_value_int((long )y);
    }
    }
  } else {
//#line 5
    load_to_heap_int((unsigned long )(& x), (long )x, 11);
//#line 5
    load_to_heap_int(0UL, 0, 11);
//#line 5
    apply_op(1, 14);
//#line 5
    branch(5, 1, 0, 0);
//#line 11
    load_to_heap_int((unsigned long )(& y), (long )y, 11);
//#line 11
    load_to_heap_int(0UL, 1, 11);
//#line 11
    apply_op(2, 22);
//#line 11
    store_to_var_table((unsigned long )(& y));
//#line 11
    y --;
//#line 11
    store_concrete_value_int((long )y);
  }
  }
  {
//#line 14
  load_to_heap_int(0UL, 0, 11);
//#line 14
  return (0);
  }
}
}
//#line 17 "mcdc_test.c"
void testme(void) 
{ 
  int x ;
  int y ;
  unsigned long __cil_tmp3 ;
  unsigned long __cil_tmp4 ;
  int *__cil_tmp5 ;
  int __cil_tmp6 ;
  int *__cil_tmp7 ;
  int __cil_tmp8 ;

  {
  set_main_function_id(1);
  {
//#line 20
  load_to_heap_int((unsigned long )(& x), (long )x, 11);
//#line 20
  apply_op(2, 27);
//#line 20
  store_to_var_table((unsigned long )(& __cil_tmp3));
//#line 20
  __cil_tmp3 = (unsigned long )(& x);
//#line 20
  store_concrete_value_int((long )__cil_tmp3);
//#line 20
  _cf__getInput(__cil_tmp3);
//#line 21
  load_to_heap_int((unsigned long )(& y), (long )y, 11);
//#line 21
  apply_op(2, 27);
//#line 21
  store_to_var_table((unsigned long )(& __cil_tmp4));
//#line 21
  __cil_tmp4 = (unsigned long )(& y);
//#line 21
  store_concrete_value_int((long )__cil_tmp4);
//#line 21
  _cf__getInput(__cil_tmp4);
//#line 22
  load_to_heap_int((unsigned long )(& x), (long )x, 11);
//#line 22
  apply_op(2, 27);
//#line 22
  store_to_var_table((unsigned long )(& __cil_tmp5));
//#line 22
  __cil_tmp5 = & x;
//#line 22
  store_concrete_value_int((long )__cil_tmp5);
//#line 22
  load_to_heap_int((unsigned long )(& __cil_tmp5), (long )__cil_tmp5, 11);
//#line 22
  apply_op(2, 28);
//#line 22
  store_to_var_table((unsigned long )(& __cil_tmp6));
//#line 22
  __cil_tmp6 = *__cil_tmp5;
//#line 22
  store_concrete_value_int((long )__cil_tmp6);
//#line 22
  load_to_heap_int((unsigned long )(& y), (long )y, 11);
//#line 22
  apply_op(2, 27);
//#line 22
  store_to_var_table((unsigned long )(& __cil_tmp7));
//#line 22
  __cil_tmp7 = & y;
//#line 22
  store_concrete_value_int((long )__cil_tmp7);
//#line 22
  load_to_heap_int((unsigned long )(& __cil_tmp7), (long )__cil_tmp7, 11);
//#line 22
  apply_op(2, 28);
//#line 22
  store_to_var_table((unsigned long )(& __cil_tmp8));
//#line 22
  __cil_tmp8 = *__cil_tmp7;
//#line 22
  store_concrete_value_int((long )__cil_tmp8);
//#line 22
  argu_push((unsigned long )(& __cil_tmp6), 11);
//#line 22
  argu_push((unsigned long )(& __cil_tmp8), 11);
//#line 22
  para_num_stack_push(2);
//#line 22
  foo(__cil_tmp6, __cil_tmp8);
  }
//#line 23
  return;
}
}
void _cf__getInput(unsigned long addr)
{
	int id = get_input_id();
	switch(id)
	{
	case 0:
		get_test_case_int((unsigned long)addr);
		break;
	case 1:
		get_test_case_int((unsigned long)addr);
		break;
	}
}
void main(int argc, char *argv[])
{
	init_caut(argc,argv);
	init_coverage_driven_testing_framework();
	while(1){
		init_caut_exec();
		testme();
		solve_caut_exec();
	}
}
