#include"../caut.h"
/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is true */

//#line 6 "../caut.h"
extern void _cf__getInput(unsigned long addr ) ;
//#line 4 "dump_transitions100.c"
void dump_transitions(char *file , int *state , int csize , int *ecgroup ) 
{ 
  int i ;
  int ec ;
  int out_char_set[6] ;
  int *__cil_tmp8 ;
  int __cil_tmp9 ;
  int *__cil_tmp10 ;
  int *__cil_tmp11 ;
  int __cil_tmp12 ;
  unsigned int __cil_tmp13 ;
  unsigned int __cil_tmp14 ;
  int *__cil_tmp15 ;
  unsigned int __cil_tmp16 ;
  unsigned int __cil_tmp17 ;
  unsigned int __cil_tmp18 ;
  unsigned int __cil_tmp19 ;

  {
  set_main_function_id(0);
  para_pop((unsigned long )(& file));
  para_pop((unsigned long )(& state));
  para_pop((unsigned long )(& csize));
  para_pop((unsigned long )(& ecgroup));
  {
//#line 8
  cover_condition_fun(1, csize - 6, 11);
//#line 8
  if (csize > 6) {
//#line 8
    load_to_heap_int((unsigned long )(& csize), (long )csize, 11);
//#line 8
    load_to_heap_int(0UL, 6, 11);
//#line 8
    apply_op(1, 11);
//#line 8
    branch(8, 1, 1, 0);
//#line 9
    return;
  } else {
//#line 8
    load_to_heap_int((unsigned long )(& csize), (long )csize, 11);
//#line 8
    load_to_heap_int(0UL, 6, 11);
//#line 8
    apply_op(1, 11);
//#line 8
    branch(8, 1, 0, 0);
  }
  }
//#line 10
  load_to_heap_int(0UL, 0, 11);
//#line 10
  store_to_var_table((unsigned long )(& i));
//#line 10
  i = 0;
//#line 10
  store_concrete_value_int((long )i);
  {
//#line 10
  while (1) {
    while_continue: /* CIL Label */ ;
    {
//#line 10
    cover_condition_fun(7, i - csize, 16);
//#line 10
    if (i < csize) {
//#line 10
      load_to_heap_int((unsigned long )(& i), (long )i, 11);
//#line 10
      load_to_heap_int((unsigned long )(& csize), (long )csize, 11);
//#line 10
      apply_op(1, 16);
//#line 10
      branch(10, 7, 1, 0);
    } else {
//#line 10
      load_to_heap_int((unsigned long )(& i), (long )i, 11);
//#line 10
      load_to_heap_int((unsigned long )(& csize), (long )csize, 11);
//#line 10
      apply_op(1, 16);
//#line 10
      branch(10, 7, 0, 0);
//#line 10
      goto while_break;
    }
    }
    {
//#line 13
    load_to_heap_int((unsigned long )(& ecgroup), (long )ecgroup, 14);
//#line 13
    load_to_heap_int((unsigned long )(& i), (long )i, 11);
//#line 13
    apply_op(2, 25);
//#line 13
    store_to_var_table((unsigned long )(& __cil_tmp8));
//#line 13
    __cil_tmp8 = ecgroup + i;
//#line 13
    store_concrete_value_int((long )__cil_tmp8);
//#line 13
    load_to_heap_int((unsigned long )(& __cil_tmp8), (long )((int *)__cil_tmp8), 11);
//#line 13
    apply_op(2, 28);
//#line 13
    store_to_var_table((unsigned long )(& __cil_tmp9));
//#line 13
    __cil_tmp9 = *((int *)__cil_tmp8);
//#line 13
    store_concrete_value_int((long )__cil_tmp9);
    {
//#line 13
    cover_condition_fun(11, __cil_tmp9 - 0, 12);
//#line 13
    if (__cil_tmp9 >= 0) {
//#line 13
      load_to_heap_int((unsigned long )(& __cil_tmp9), (long )__cil_tmp9, 11);
//#line 13
      load_to_heap_int(0UL, 0, 11);
//#line 13
      apply_op(1, 12);
//#line 13
      branch(13, 11, 1, 0);
//#line 14
      load_to_heap_int((unsigned long )(& ecgroup), (long )ecgroup, 14);
//#line 14
      load_to_heap_int((unsigned long )(& i), (long )i, 11);
//#line 14
      apply_op(2, 25);
//#line 14
      store_to_var_table((unsigned long )(& __cil_tmp10));
//#line 14
      __cil_tmp10 = ecgroup + i;
//#line 14
      store_concrete_value_int((long )__cil_tmp10);
//#line 14
      load_to_heap_int((unsigned long )(& __cil_tmp10), (long )((int *)__cil_tmp10),
                       11);
//#line 14
      apply_op(2, 28);
//#line 14
      store_to_var_table((unsigned long )(& ec));
//#line 14
      ec = *((int *)__cil_tmp10);
//#line 14
      store_concrete_value_int((long )ec);
    } else {
//#line 13
      load_to_heap_int((unsigned long )(& __cil_tmp9), (long )__cil_tmp9, 11);
//#line 13
      load_to_heap_int(0UL, 0, 11);
//#line 13
      apply_op(1, 12);
//#line 13
      branch(13, 11, 0, 0);
//#line 16
      load_to_heap_int((unsigned long )(& ecgroup), (long )ecgroup, 14);
//#line 16
      load_to_heap_int((unsigned long )(& i), (long )i, 11);
//#line 16
      apply_op(2, 25);
//#line 16
      store_to_var_table((unsigned long )(& __cil_tmp11));
//#line 16
      __cil_tmp11 = ecgroup + i;
//#line 16
      store_concrete_value_int((long )__cil_tmp11);
//#line 16
      load_to_heap_int((unsigned long )(& __cil_tmp11), (long )((int *)__cil_tmp11),
                       11);
//#line 16
      apply_op(2, 28);
//#line 16
      store_to_var_table((unsigned long )(& __cil_tmp12));
//#line 16
      __cil_tmp12 = *((int *)__cil_tmp11);
//#line 16
      store_concrete_value_int((long )__cil_tmp12);
//#line 16
      load_to_heap_int(0UL, 0, 11);
//#line 16
      load_to_heap_int((unsigned long )(& __cil_tmp12), (long )__cil_tmp12, 11);
//#line 16
      apply_op(2, 22);
//#line 16
      store_to_var_table((unsigned long )(& ec));
//#line 16
      ec = 0 - __cil_tmp12;
//#line 16
      store_concrete_value_int((long )ec);
    }
    }
    }
    {
//#line 17
    cover_condition_fun(14, ec - 5, 11);
//#line 17
    if (ec > 5) {
//#line 17
      load_to_heap_int((unsigned long )(& ec), (long )ec, 11);
//#line 17
      load_to_heap_int(0UL, 5, 11);
//#line 17
      apply_op(1, 11);
//#line 17
      branch(17, 14, 1, 0);
//#line 18
      return;
    } else {
//#line 17
      load_to_heap_int((unsigned long )(& ec), (long )ec, 11);
//#line 17
      load_to_heap_int(0UL, 5, 11);
//#line 17
      apply_op(1, 11);
//#line 17
      branch(17, 14, 0, 0);
    }
    }
//#line 19
    load_to_heap_int((unsigned long )(& i), (long )i, 11);
//#line 19
    load_to_heap_int(0UL, 4U, 17);
//#line 19
    apply_op(2, 23);
//#line 19
    store_to_var_table((unsigned long )(& __cil_tmp13));
//#line 19
    __cil_tmp13 = i * 4U;
//#line 19
    store_concrete_value_int((long )__cil_tmp13);
//#line 19
    load_to_heap_int((unsigned long )(out_char_set), (long )out_char_set, 14);
//#line 19
    load_to_heap_int((unsigned long )(& __cil_tmp13), (long )__cil_tmp13, 17);
//#line 19
    apply_op(2, 21);
//#line 19
    store_to_var_table((unsigned long )(& __cil_tmp14));
//#line 19
    __cil_tmp14 = (unsigned int )(out_char_set) + __cil_tmp13;
//#line 19
    store_concrete_value_int((long )__cil_tmp14);
//#line 19
    load_to_heap_int((unsigned long )(& state), (long )state, 14);
//#line 19
    load_to_heap_int((unsigned long )(& ec), (long )ec, 11);
//#line 19
    apply_op(2, 25);
//#line 19
    store_to_var_table((unsigned long )(& __cil_tmp15));
//#line 19
    __cil_tmp15 = state + ec;
//#line 19
    store_concrete_value_int((long )__cil_tmp15);
//#line 19
    load_to_heap_int((unsigned long )(& __cil_tmp15), (long )((int *)__cil_tmp15),
                     11);
//#line 19
    apply_op(2, 28);
//#line 19
    store_to_var_table((unsigned long )((int *)__cil_tmp14));
//#line 19
    *((int *)__cil_tmp14) = *((int *)__cil_tmp15);
//#line 19
    store_concrete_value_int((long )*((int *)__cil_tmp14));
//#line 10
    load_to_heap_int((unsigned long )(& i), (long )i, 11);
//#line 10
    load_to_heap_int(0UL, 1, 11);
//#line 10
    apply_op(2, 21);
//#line 10
    store_to_var_table((unsigned long )(& i));
//#line 10
    i ++;
//#line 10
    store_concrete_value_int((long )i);
  }
  while_break: /* CIL Label */ ;
  }
//#line 23
  load_to_heap_int(0UL, 0, 11);
//#line 23
  store_to_var_table((unsigned long )(& i));
//#line 23
  i = 0;
//#line 23
  store_concrete_value_int((long )i);
  {
//#line 23
  while (1) {
    while_continue___0: /* CIL Label */ ;
    {
//#line 23
    cover_condition_fun(22, i - csize, 16);
//#line 23
    if (i < csize) {
//#line 23
      load_to_heap_int((unsigned long )(& i), (long )i, 11);
//#line 23
      load_to_heap_int((unsigned long )(& csize), (long )csize, 11);
//#line 23
      apply_op(1, 16);
//#line 23
      branch(23, 22, 1, 0);
    } else {
//#line 23
      load_to_heap_int((unsigned long )(& i), (long )i, 11);
//#line 23
      load_to_heap_int((unsigned long )(& csize), (long )csize, 11);
//#line 23
      apply_op(1, 16);
//#line 23
      branch(23, 22, 0, 0);
//#line 23
      goto while_break___0;
    }
    }
//#line 24
    load_to_heap_int((unsigned long )(& i), (long )i, 11);
//#line 24
    load_to_heap_int(0UL, 4U, 17);
//#line 24
    apply_op(2, 23);
//#line 24
    store_to_var_table((unsigned long )(& __cil_tmp16));
//#line 24
    __cil_tmp16 = i * 4U;
//#line 24
    store_concrete_value_int((long )__cil_tmp16);
//#line 24
    load_to_heap_int((unsigned long )(out_char_set), (long )out_char_set, 14);
//#line 24
    load_to_heap_int((unsigned long )(& __cil_tmp16), (long )__cil_tmp16, 17);
//#line 24
    apply_op(2, 21);
//#line 24
    store_to_var_table((unsigned long )(& __cil_tmp17));
//#line 24
    __cil_tmp17 = (unsigned int )(out_char_set) + __cil_tmp16;
//#line 24
    store_concrete_value_int((long )__cil_tmp17);
//#line 24
    load_to_heap_int((unsigned long )(& i), (long )i, 11);
//#line 24
    load_to_heap_int(0UL, 4U, 17);
//#line 24
    apply_op(2, 23);
//#line 24
    store_to_var_table((unsigned long )(& __cil_tmp18));
//#line 24
    __cil_tmp18 = i * 4U;
//#line 24
    store_concrete_value_int((long )__cil_tmp18);
//#line 24
    load_to_heap_int((unsigned long )(out_char_set), (long )out_char_set, 14);
//#line 24
    load_to_heap_int((unsigned long )(& __cil_tmp18), (long )__cil_tmp18, 17);
//#line 24
    apply_op(2, 21);
//#line 24
    store_to_var_table((unsigned long )(& __cil_tmp19));
//#line 24
    __cil_tmp19 = (unsigned int )(out_char_set) + __cil_tmp18;
//#line 24
    store_concrete_value_int((long )__cil_tmp19);
//#line 24
    load_to_heap_int((unsigned long )(& __cil_tmp19), (long )((int *)__cil_tmp19),
                     11);
//#line 24
    apply_op(2, 28);
//#line 24
    load_to_heap_int(0UL, 0, 11);
//#line 24
    apply_op(2, 13);
//#line 24
    store_to_var_table((unsigned long )((int *)__cil_tmp17));
//#line 24
    *((int *)__cil_tmp17) = ! *((int *)__cil_tmp19);
//#line 24
    store_concrete_value_int((long )*((int *)__cil_tmp17));
//#line 23
    load_to_heap_int((unsigned long )(& i), (long )i, 11);
//#line 23
    load_to_heap_int(0UL, 1, 11);
//#line 23
    apply_op(2, 21);
//#line 23
    store_to_var_table((unsigned long )(& i));
//#line 23
    i ++;
//#line 23
    store_concrete_value_int((long )i);
  }
  while_break___0: /* CIL Label */ ;
  }
//#line 27
  return;
}
}
//#line 29 "dump_transitions100.c"
void testme(void) 
{ 
  char file[6] ;
  int state[6] ;
  int csize ;
  int ecgroup[7] ;
  unsigned long __cil_tmp5 ;
  unsigned long __cil_tmp6 ;
  unsigned long __cil_tmp7 ;
  unsigned long __cil_tmp8 ;
  unsigned int __cil_tmp9 ;
  unsigned int __cil_tmp10 ;
  char *__cil_tmp11 ;
  char *__cil_tmp12 ;
  unsigned int __cil_tmp13 ;
  unsigned int __cil_tmp14 ;
  int *__cil_tmp15 ;
  int *__cil_tmp16 ;
  int *__cil_tmp17 ;
  int __cil_tmp18 ;
  unsigned int __cil_tmp19 ;
  unsigned int __cil_tmp20 ;
  int *__cil_tmp21 ;
  int *__cil_tmp22 ;

  {
  set_main_function_id(1);
  {
//#line 35
  load_to_heap_int((unsigned long )(& file), (long )file, 0);
//#line 35
  apply_op(2, 27);
//#line 35
  store_to_var_table((unsigned long )(& __cil_tmp5));
//#line 35
  __cil_tmp5 = (unsigned long )(& file);
//#line 35
  store_concrete_value_int((long )__cil_tmp5);
//#line 35
  _cf__getInput(__cil_tmp5);
//#line 36
  load_to_heap_int((unsigned long )(& state), (long )state, 0);
//#line 36
  apply_op(2, 27);
//#line 36
  store_to_var_table((unsigned long )(& __cil_tmp6));
//#line 36
  __cil_tmp6 = (unsigned long )(& state);
//#line 36
  store_concrete_value_int((long )__cil_tmp6);
//#line 36
  _cf__getInput(__cil_tmp6);
//#line 37
  load_to_heap_int((unsigned long )(& csize), (long )csize, 11);
//#line 37
  apply_op(2, 27);
//#line 37
  store_to_var_table((unsigned long )(& __cil_tmp7));
//#line 37
  __cil_tmp7 = (unsigned long )(& csize);
//#line 37
  store_concrete_value_int((long )__cil_tmp7);
//#line 37
  _cf__getInput(__cil_tmp7);
//#line 38
  load_to_heap_int((unsigned long )(& ecgroup), (long )ecgroup, 0);
//#line 38
  apply_op(2, 27);
//#line 38
  store_to_var_table((unsigned long )(& __cil_tmp8));
//#line 38
  __cil_tmp8 = (unsigned long )(& ecgroup);
//#line 38
  store_concrete_value_int((long )__cil_tmp8);
//#line 38
  _cf__getInput(__cil_tmp8);
//#line 39
  load_to_heap_int(0UL, 0, 11);
//#line 39
  load_to_heap_int(0UL, 1U, 17);
//#line 39
  apply_op(2, 23);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp9));
//#line 39
  __cil_tmp9 = 0 * 1U;
//#line 39
  store_concrete_value_int((long )__cil_tmp9);
//#line 39
  load_to_heap_int((unsigned long )(file), (long )file, 14);
//#line 39
  load_to_heap_int((unsigned long )(& __cil_tmp9), (long )__cil_tmp9, 17);
//#line 39
  apply_op(2, 21);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp10));
//#line 39
  __cil_tmp10 = (unsigned int )(file) + __cil_tmp9;
//#line 39
  store_concrete_value_int((long )__cil_tmp10);
//#line 39
  load_to_heap_int((unsigned long )(& __cil_tmp10), (long )__cil_tmp10, 17);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp11));
//#line 39
  __cil_tmp11 = (char *)__cil_tmp10;
//#line 39
  store_concrete_value_int((long )__cil_tmp11);
//#line 39
  load_to_heap_int((unsigned long )(& __cil_tmp11), (long )__cil_tmp11, 14);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp12));
//#line 39
  __cil_tmp12 = (char *)__cil_tmp11;
//#line 39
  store_concrete_value_int((long )__cil_tmp12);
//#line 39
  load_to_heap_int(0UL, 0, 11);
//#line 39
  load_to_heap_int(0UL, 4U, 17);
//#line 39
  apply_op(2, 23);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp13));
//#line 39
  __cil_tmp13 = 0 * 4U;
//#line 39
  store_concrete_value_int((long )__cil_tmp13);
//#line 39
  load_to_heap_int((unsigned long )(state), (long )state, 14);
//#line 39
  load_to_heap_int((unsigned long )(& __cil_tmp13), (long )__cil_tmp13, 17);
//#line 39
  apply_op(2, 21);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp14));
//#line 39
  __cil_tmp14 = (unsigned int )(state) + __cil_tmp13;
//#line 39
  store_concrete_value_int((long )__cil_tmp14);
//#line 39
  load_to_heap_int((unsigned long )(& __cil_tmp14), (long )__cil_tmp14, 17);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp15));
//#line 39
  __cil_tmp15 = (int *)__cil_tmp14;
//#line 39
  store_concrete_value_int((long )__cil_tmp15);
//#line 39
  load_to_heap_int((unsigned long )(& __cil_tmp15), (long )__cil_tmp15, 14);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp16));
//#line 39
  __cil_tmp16 = (int *)__cil_tmp15;
//#line 39
  store_concrete_value_int((long )__cil_tmp16);
//#line 39
  load_to_heap_int((unsigned long )(& csize), (long )csize, 11);
//#line 39
  apply_op(2, 27);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp17));
//#line 39
  __cil_tmp17 = & csize;
//#line 39
  store_concrete_value_int((long )__cil_tmp17);
//#line 39
  load_to_heap_int((unsigned long )(& __cil_tmp17), (long )__cil_tmp17, 11);
//#line 39
  apply_op(2, 28);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp18));
//#line 39
  __cil_tmp18 = *__cil_tmp17;
//#line 39
  store_concrete_value_int((long )__cil_tmp18);
//#line 39
  load_to_heap_int(0UL, 0, 11);
//#line 39
  load_to_heap_int(0UL, 4U, 17);
//#line 39
  apply_op(2, 23);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp19));
//#line 39
  __cil_tmp19 = 0 * 4U;
//#line 39
  store_concrete_value_int((long )__cil_tmp19);
//#line 39
  load_to_heap_int((unsigned long )(ecgroup), (long )ecgroup, 14);
//#line 39
  load_to_heap_int((unsigned long )(& __cil_tmp19), (long )__cil_tmp19, 17);
//#line 39
  apply_op(2, 21);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp20));
//#line 39
  __cil_tmp20 = (unsigned int )(ecgroup) + __cil_tmp19;
//#line 39
  store_concrete_value_int((long )__cil_tmp20);
//#line 39
  load_to_heap_int((unsigned long )(& __cil_tmp20), (long )__cil_tmp20, 17);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp21));
//#line 39
  __cil_tmp21 = (int *)__cil_tmp20;
//#line 39
  store_concrete_value_int((long )__cil_tmp21);
//#line 39
  load_to_heap_int((unsigned long )(& __cil_tmp21), (long )__cil_tmp21, 14);
//#line 39
  store_to_var_table((unsigned long )(& __cil_tmp22));
//#line 39
  __cil_tmp22 = (int *)__cil_tmp21;
//#line 39
  store_concrete_value_int((long )__cil_tmp22);
//#line 39
  argu_push((unsigned long )(& __cil_tmp12), 14);
//#line 39
  argu_push((unsigned long )(& __cil_tmp16), 14);
//#line 39
  argu_push((unsigned long )(& __cil_tmp18), 11);
//#line 39
  argu_push((unsigned long )(& __cil_tmp22), 14);
//#line 39
  para_num_stack_push(4);
//#line 39
  dump_transitions(__cil_tmp12, __cil_tmp16, __cil_tmp18, __cil_tmp22);
  }
//#line 40
  return;
}
}
void get_test_case_array_int(unsigned long, int);
void get_test_case_array_char(unsigned long, int);
void get_test_case_array_int(unsigned long addr, int index)
{
	int i;
	array_declaration(addr, index, 11, sizeof(int));
	for(i = 0; i < index; i++)
	{
		get_test_case_int((unsigned long)addr);
		addr += sizeof(int);
	}
}

void get_test_case_array_char(unsigned long addr, int index)
{
	int i;
	array_declaration(addr, index, 15, sizeof(char));
	for(i = 0; i < index; i++)
	{
		get_test_case_char((unsigned long)addr);
		addr += sizeof(char);
	}
}

void _cf__getInput(unsigned long addr)
{
	int id = get_input_id();
	switch(id)
	{
	case 0:
		get_test_case_array_char(addr, 6);
		break;
	case 1:
		get_test_case_array_int(addr, 6);
		break;
	case 2:
		get_test_case_int((unsigned long)addr);
		break;
	case 3:
		get_test_case_array_int(addr, 7);
		break;
	}
}
void main(int argc, char *argv[])
{
	init_caut(argc,argv);
	init_coverage_driven_testing_framework();
	while(1){
		init_caut_exec();
		testme();
		solve_caut_exec();
	}
}
