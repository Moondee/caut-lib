/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is true */

//////////////#line 7 "../caut.h"
extern void _cf__getInput(unsigned long addr ) ;
//////////////#line 11 "bubble.c"
void bubble(int *v , int n ) 
{ 
  int i ;
  int j ;
  int k ;

  {
//////////////#line 16
  if (n >= 6) {
//////////////#line 17
    return;
  }
//////////////#line 18
  i = n;
//////////////#line 18
  while (i > 1) {
//////////////#line 19
    j = 1;
//////////////#line 19
    while (j < i) {
//////////////#line 20
      if (*(v + j) > *(v + (j + 1))) {
//////////////#line 22
        k = *(v + j);
//////////////#line 23
        *(v + j) = *(v + (j + 1));
//////////////#line 24
        *(v + (j + 1)) = k;
      }
//////////////#line 19
      j ++;
    }
//////////////#line 18
    i --;
  }
//////////////#line 26
  return;
}
}
//////////////#line 29 "bubble.c"
void testme(void) 
{ 
  int v[6] ;
  int n ;

  {
//////////////#line 33
  _cf__getInput((unsigned long )(& v));
//////////////#line 34
  _cf__getInput((unsigned long )(& n));
//////////////#line 35
  bubble((int *)(v), n);
//////////////#line 36
  return;
}
}
//////////////#line 29 "bubble.c"
void __CAUT_register_types(void) 
{ 
  __CAUT_ctype_t __CAUT_t ;
  int __CAUT_reg_ret ;
  int __cil_tmp3[1] ;
  int __cil_tmp4[2] ;
  int __cil_tmp5[1] ;

  {
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("void", 4, sizeof(void ), 0);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(0, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("char", 4, sizeof(char ), 1);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(1, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("signed char", 11, sizeof(signed char ),
                                          2);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(2, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("short", 5, sizeof(short ), 3);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(3, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("int", 3, sizeof(int ), 4);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(4, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("long", 4, sizeof(long ), 5);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(5, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("long long", 9, sizeof(long long ), 6);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(6, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("unsigned char", 13, sizeof(unsigned char ),
                                          7);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(7, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("unsigned short", 14, sizeof(unsigned short ),
                                          8);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(8, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("unsigned int", 12, sizeof(unsigned int ),
                                          9);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(9, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("unsigned long", 13, sizeof(unsigned long ),
                                          10);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(10, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("unsigned long long", 18, sizeof(unsigned long long ),
                                          11);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(11, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("float", 5, sizeof(float ), 12);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(12, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("double", 6, sizeof(double ), 13);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(13, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_primitive_type("long double", 11, sizeof(long double ),
                                          14);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(14, __CAUT_t);
//////////////#line 29
  __cil_tmp3[0] = 10;
//////////////#line 29
  __CAUT_t = __CAUT_create_func_type("r_void_a_unsigned long_", 23, 1, __cil_tmp3,
                                     0);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(20, __CAUT_t);
//////////////#line 29
  __cil_tmp4[0] = 22;
//////////////#line 29
  __cil_tmp4[1] = 4;
//////////////#line 29
  __CAUT_t = __CAUT_create_func_type("r_void_a_int*_int_", 18, 2, __cil_tmp4, 0);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(21, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_pointer_type("int*", 4, 4);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(22, __CAUT_t);
//////////////#line 29
  __CAUT_t = __CAUT_create_func_type("r_void_a_", 9, 0, 0, 0);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(23, __CAUT_t);
//////////////#line 29
  __cil_tmp5[0] = 6;
//////////////#line 29
  __CAUT_t = __CAUT_create_array_type("int[6]", 6, 4, 1, __cil_tmp5);
//////////////#line 29
  __CAUT_reg_ret = __CAUT_register_datatype(24, __CAUT_t);
//////////////#line 29
  return;
}
}
