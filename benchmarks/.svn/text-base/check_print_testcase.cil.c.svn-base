#include"../caut.h"
/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is true */

//#line 7 "check_print_testcase.c"
struct d {
   int d1 ;
   char d2 ;
};
//#line 7 "check_print_testcase.c"
typedef struct d dd;
//#line 12 "check_print_testcase.c"
struct A {
   char test ;
   unsigned int tt ;
   dd *ddd ;
};
//#line 19
enum data {
    Mondey = 0,
    Friday = 1,
    Sunday = 2
} ;
//#line 7 "../caut.h"
extern void _cf__getInput(unsigned long addr ) ;
//#line 3 "check_print_testcase.c"
int a  ;
//#line 4 "check_print_testcase.c"
long a1  ;
//#line 5 "check_print_testcase.c"
char a2  ;
//#line 12 "check_print_testcase.c"
struct A *aa  ;
//#line 17 "check_print_testcase.c"
int e[10]  ;
//#line 18 "check_print_testcase.c"
int ee[10][12]  ;
//#line 19 "check_print_testcase.c"
enum data data1  ;
//#line 24
extern int ( /* missing proto */  f8)() ;
//#line 25
extern int ( /* missing proto */  g10)() ;
//#line 29
extern int ( /* missing proto */  g8)() ;
//#line 30
extern int ( /* missing proto */  g9)() ;
//#line 31
extern int ( /* missing proto */  g1)() ;
//#line 32
extern int ( /* missing proto */  f2)() ;
//#line 33
extern int ( /* missing proto */  f7)() ;
//#line 33
extern int ( /* missing proto */  g7)() ;
//#line 27
extern int ( /* missing proto */  f1)() ;
//#line 27
extern int ( /* missing proto */  f0)() ;
//#line 36
extern int ( /* missing proto */  h1)() ;
//#line 37
extern int ( /* missing proto */  f3)() ;
//#line 38
extern int ( /* missing proto */  f4)() ;
//#line 38
extern int ( /* missing proto */  g4)() ;
//#line 39
extern int ( /* missing proto */  f6)() ;
//#line 40
extern int ( /* missing proto */  f5)() ;
//#line 40
extern int ( /* missing proto */  g5)() ;
//#line 41
extern int ( /* missing proto */  g6)() ;
//#line 21 "check_print_testcase.c"
int foo(int x , int y , int __cil_tmp17 , int __cil_tmp19 , int __cil_tmp21 , int __cil_tmp23 ,
        int __cil_tmp25 , int __cil_tmp27 , int __cil_tmp29 , int __cil_tmp31 , int __cil_tmp33 ,
        int __cil_tmp35 , int __cil_tmp37 , int __cil_tmp39 , int __cil_tmp41 , int __cil_tmp43 ,
        int __cil_tmp45 , int __cil_tmp47 ) 
{ 
  int c ;
  char a3 ;
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  int tmp___4 ;
  int tmp___5 ;
  int tmp___6 ;
  int tmp___7 ;
  int tmp___8 ;
  int tmp___9 ;
  int tmp___10 ;

  {
  set_main_function_id(0);
  para_pop((unsigned long )(& x));
  para_pop((unsigned long )(& y));
  para_pop((unsigned long )(& __cil_tmp17));
  para_pop((unsigned long )(& __cil_tmp19));
  para_pop((unsigned long )(& __cil_tmp21));
  para_pop((unsigned long )(& __cil_tmp23));
  para_pop((unsigned long )(& __cil_tmp25));
  para_pop((unsigned long )(& __cil_tmp27));
  para_pop((unsigned long )(& __cil_tmp29));
  para_pop((unsigned long )(& __cil_tmp31));
  para_pop((unsigned long )(& __cil_tmp33));
  para_pop((unsigned long )(& __cil_tmp35));
  para_pop((unsigned long )(& __cil_tmp37));
  para_pop((unsigned long )(& __cil_tmp39));
  para_pop((unsigned long )(& __cil_tmp41));
  para_pop((unsigned long )(& __cil_tmp43));
  para_pop((unsigned long )(& __cil_tmp45));
  para_pop((unsigned long )(& __cil_tmp47));
  {
//#line 24
  load_to_heap_int((unsigned long )(& __cil_tmp17), (long )__cil_tmp17, 11);
//#line 24
  store_to_var_table((unsigned long )(& tmp));
//#line 24
  tmp = __cil_tmp17;
//#line 24
  store_concrete_value_int((long )tmp);
//#line 24
  load_to_heap_int((unsigned long )(& tmp), (long )tmp, 11);
//#line 24
  store_to_var_table((unsigned long )(& a3));
//#line 24
  a3 = (char )tmp;
//#line 24
  store_concrete_value_int((long )a3);
//#line 25
  load_to_heap_int((unsigned long )(& __cil_tmp19), (long )__cil_tmp19, 11);
//#line 25
  store_to_var_table((unsigned long )(& c));
//#line 25
  c = __cil_tmp19;
//#line 25
  store_concrete_value_int((long )c);
//#line 27
  load_to_heap_int((unsigned long )(& __cil_tmp21), (long )__cil_tmp21, 11);
//#line 27
  store_to_var_table((unsigned long )(& tmp___4));
//#line 27
  tmp___4 = __cil_tmp21;
//#line 27
  store_concrete_value_int((long )tmp___4);
  }
  {
//#line 27
  cover_condition_fun(6, tmp___4 - 0, 14);
//#line 27
  if (tmp___4 != 0) {
//#line 27
    load_to_heap_int((unsigned long )(& tmp___4), (long )tmp___4, 11);
//#line 27
    load_to_heap_int(0UL, 0, 11);
//#line 27
    apply_op(1, 14);
//#line 27
    branch(27, 6, 1, 0);
    {
//#line 27
    load_to_heap_int((unsigned long )(& __cil_tmp23), (long )__cil_tmp23, 11);
//#line 27
    store_to_var_table((unsigned long )(& tmp___5));
//#line 27
    tmp___5 = __cil_tmp23;
//#line 27
    store_concrete_value_int((long )tmp___5);
    }
    {
//#line 27
    cover_condition_fun(9, x - tmp___5, 13);
//#line 27
    if (x == tmp___5) {
//#line 27
      load_to_heap_int((unsigned long )(& x), (long )x, 11);
//#line 27
      load_to_heap_int((unsigned long )(& tmp___5), (long )tmp___5, 11);
//#line 27
      apply_op(1, 13);
//#line 27
      branch(27, 9, 1, 0);
      {
//#line 28
      load_to_heap_int((unsigned long )(& y), (long )y, 11);
//#line 28
      load_to_heap_int(0UL, 1, 11);
//#line 28
      apply_op(2, 21);
//#line 28
      store_to_var_table((unsigned long )(& y));
//#line 28
      y ++;
//#line 28
      store_concrete_value_int((long )y);
//#line 29
      load_to_heap_int((unsigned long )(& __cil_tmp25), (long )__cil_tmp25, 11);
//#line 29
      store_to_var_table((unsigned long )(& tmp___0));
//#line 29
      tmp___0 = __cil_tmp25;
//#line 29
      store_concrete_value_int((long )tmp___0);
//#line 29
      load_to_heap_int((unsigned long )(& tmp___0), (long )tmp___0, 11);
//#line 29
      store_to_var_table((unsigned long )(& a2));
//#line 29
      a2 = (char )tmp___0;
//#line 29
      store_concrete_value_int((long )a2);
//#line 30
      load_to_heap_int((unsigned long )(& __cil_tmp27), (long )__cil_tmp27, 11);
//#line 30
      store_to_var_table((unsigned long )(& tmp___1));
//#line 30
      tmp___1 = __cil_tmp27;
//#line 30
      store_concrete_value_int((long )tmp___1);
//#line 30
      load_to_heap_int((unsigned long )(& tmp___1), (long )tmp___1, 11);
//#line 30
      store_to_var_table((unsigned long )(& a3));
//#line 30
      a3 = (char )tmp___1;
//#line 30
      store_concrete_value_int((long )a3);
//#line 31
      load_to_heap_int((unsigned long )(& __cil_tmp29), (long )__cil_tmp29, 11);
//#line 31
      store_to_var_table((unsigned long )(& x));
//#line 31
      x = __cil_tmp29;
//#line 31
      store_concrete_value_int((long )x);

//#line 33
      load_to_heap_int((unsigned long )(& __cil_tmp31), (long )__cil_tmp31, 11);
//#line 33
      store_to_var_table((unsigned long )(& tmp___2));
//#line 33
      tmp___2 = __cil_tmp31;
//#line 33
      store_concrete_value_int((long )tmp___2);
//#line 33
      load_to_heap_int((unsigned long )(& __cil_tmp33), (long )__cil_tmp33, 11);
//#line 33
      store_to_var_table((unsigned long )(& tmp___3));
//#line 33
      tmp___3 = __cil_tmp33;
//#line 33
      store_concrete_value_int((long )tmp___3);
//#line 33
      load_to_heap_int((unsigned long )(& tmp___2), (long )tmp___2, 11);
//#line 33
      load_to_heap_int((unsigned long )(& tmp___3), (long )tmp___3, 11);
//#line 33
      apply_op(2, 21);
//#line 33
      store_to_var_table((unsigned long )(& x));
//#line 33
      x = tmp___2 + tmp___3;
//#line 33
      store_concrete_value_int((long )x);
      }
    } else {
//#line 27
      load_to_heap_int((unsigned long )(& x), (long )x, 11);
//#line 27
      load_to_heap_int((unsigned long )(& tmp___5), (long )tmp___5, 11);
//#line 27
      apply_op(1, 13);
//#line 27
      branch(27, 9, 0, 0);
    }
    }
  } else {
//#line 27
    load_to_heap_int((unsigned long )(& tmp___4), (long )tmp___4, 11);
//#line 27
    load_to_heap_int(0UL, 0, 11);
//#line 27
    apply_op(1, 14);
//#line 27
    branch(27, 6, 0, 0);
  }
  }
  {

//#line 37
  load_to_heap_int((unsigned long )(& __cil_tmp35), (long )__cil_tmp35, 11);
//#line 37
  store_to_var_table((unsigned long )(& a));
//#line 37
  a = __cil_tmp35;
//#line 37
  store_concrete_value_int((long )a);
//#line 38
  load_to_heap_int((unsigned long )(& __cil_tmp37), (long )__cil_tmp37, 11);
//#line 38
  store_to_var_table((unsigned long )(& tmp___6));
//#line 38
  tmp___6 = __cil_tmp37;
//#line 38
  store_concrete_value_int((long )tmp___6);
//#line 38
  load_to_heap_int((unsigned long )(& __cil_tmp39), (long )__cil_tmp39, 11);
//#line 38
  store_to_var_table((unsigned long )(& tmp___7));
//#line 38
  tmp___7 = __cil_tmp39;
//#line 38
  store_concrete_value_int((long )tmp___7);
//#line 38
  load_to_heap_int((unsigned long )(& tmp___6), (long )tmp___6, 11);
//#line 38
  load_to_heap_int((unsigned long )(& tmp___7), (long )tmp___7, 11);
//#line 38
  apply_op(2, 21);
//#line 38
  store_to_var_table((unsigned long )(& a));
//#line 38
  a = tmp___6 + tmp___7;
//#line 38
  store_concrete_value_int((long )a);
//#line 39
  load_to_heap_int((unsigned long )(& __cil_tmp41), (long )__cil_tmp41, 11);
//#line 39
  store_to_var_table((unsigned long )(& a));
//#line 39
  a = __cil_tmp41;
//#line 39
  store_concrete_value_int((long )a);
//#line 40
  load_to_heap_int((unsigned long )(& __cil_tmp43), (long )__cil_tmp43, 11);
//#line 40
  store_to_var_table((unsigned long )(& tmp___8));
//#line 40
  tmp___8 = __cil_tmp43;
//#line 40
  store_concrete_value_int((long )tmp___8);
//#line 40
  load_to_heap_int((unsigned long )(& __cil_tmp45), (long )__cil_tmp45, 11);
//#line 40
  store_to_var_table((unsigned long )(& tmp___9));
//#line 40
  tmp___9 = __cil_tmp45;
//#line 40
  store_concrete_value_int((long )tmp___9);
//#line 40
  load_to_heap_int((unsigned long )(& tmp___8), (long )tmp___8, 11);
//#line 40
  load_to_heap_int((unsigned long )(& tmp___9), (long )tmp___9, 11);
//#line 40
  apply_op(2, 21);
//#line 40
  store_to_var_table((unsigned long )(& c));
//#line 40
  c = tmp___8 + tmp___9;
//#line 40
  store_concrete_value_int((long )c);
//#line 41
  load_to_heap_int((unsigned long )(& __cil_tmp47), (long )__cil_tmp47, 11);
//#line 41
  store_to_var_table((unsigned long )(& tmp___10));
//#line 41
  tmp___10 = __cil_tmp47;
//#line 41
  store_concrete_value_int((long )tmp___10);
  }
  {
//#line 41
  load_to_heap_int((unsigned long )(& x), (long )x, 11);
//#line 41
  load_to_heap_int((unsigned long )(& tmp___10), (long )tmp___10, 11);
//#line 41
  apply_op(2, 13);
//#line 41
  return (x == tmp___10);
  }
}
}
//#line 44 "check_print_testcase.c"
void testme(void) 
{ 
  int x ;
  int y ;
  int __cil_tmp17 ;
  int __cil_tmp19 ;
  int __cil_tmp21 ;
  int __cil_tmp23 ;
  int __cil_tmp25 ;
  int __cil_tmp27 ;
  int __cil_tmp29 ;
  int __cil_tmp31 ;
  int __cil_tmp33 ;
  int __cil_tmp35 ;
  int __cil_tmp37 ;
  int __cil_tmp39 ;
  int __cil_tmp41 ;
  int __cil_tmp43 ;
  int __cil_tmp45 ;
  int __cil_tmp47 ;
  unsigned long __cil_tmp3 ;
  unsigned long __cil_tmp4 ;
  unsigned long __cil_tmp5 ;
  unsigned long __cil_tmp6 ;
  unsigned long __cil_tmp7 ;
  unsigned long __cil_tmp8 ;
  unsigned long __cil_tmp9 ;
  unsigned long __cil_tmp10 ;
  unsigned long __cil_tmp11 ;
  unsigned long __cil_tmp12 ;
  unsigned long __cil_tmp13 ;
  unsigned long __cil_tmp14 ;
  unsigned long __cil_tmp15 ;
  unsigned long __cil_tmp16 ;
  unsigned long __cil_tmp18 ;
  unsigned long __cil_tmp20 ;
  unsigned long __cil_tmp22 ;
  unsigned long __cil_tmp24 ;

  {
  set_main_function_id(1);
//#line 44
  store_input_var("x", & x, "int ");
//#line 44
  store_input_var("y", & y, "int ");
//#line 44
  store_input_var("__cil_tmp17", & __cil_tmp17, "int ");
//#line 44
  store_input_var("__cil_tmp19", & __cil_tmp19, "int ");
//#line 44
  store_input_var("__cil_tmp21", & __cil_tmp21, "int ");
//#line 44
  store_input_var("__cil_tmp23", & __cil_tmp23, "int ");
//#line 44
  store_input_var("__cil_tmp25", & __cil_tmp25, "int ");
//#line 44
  store_input_var("__cil_tmp27", & __cil_tmp27, "int ");
//#line 44
  store_input_var("__cil_tmp29", & __cil_tmp29, "int ");
//#line 44
  store_input_var("__cil_tmp31", & __cil_tmp31, "int ");
//#line 44
  store_input_var("__cil_tmp33", & __cil_tmp33, "int ");
//#line 44
  store_input_var("__cil_tmp35", & __cil_tmp35, "int ");
//#line 44
  store_input_var("__cil_tmp37", & __cil_tmp37, "int ");
//#line 44
  store_input_var("__cil_tmp39", & __cil_tmp39, "int ");
//#line 44
  store_input_var("__cil_tmp41", & __cil_tmp41, "int ");
//#line 44
  store_input_var("__cil_tmp43", & __cil_tmp43, "int ");
//#line 44
  store_input_var("__cil_tmp45", & __cil_tmp45, "int ");
//#line 44
  store_input_var("__cil_tmp47", & __cil_tmp47, "int ");
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp17), (long )__cil_tmp17, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp3));
//#line 44
  __cil_tmp3 = (unsigned long )(& __cil_tmp17);
//#line 44
  store_concrete_value_int((long )__cil_tmp3);
//#line 44
  _cf__getInput(__cil_tmp3);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp19), (long )__cil_tmp19, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp4));
//#line 44
  __cil_tmp4 = (unsigned long )(& __cil_tmp19);
//#line 44
  store_concrete_value_int((long )__cil_tmp4);
//#line 44
  _cf__getInput(__cil_tmp4);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp21), (long )__cil_tmp21, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp5));
//#line 44
  __cil_tmp5 = (unsigned long )(& __cil_tmp21);
//#line 44
  store_concrete_value_int((long )__cil_tmp5);
//#line 44
  _cf__getInput(__cil_tmp5);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp23), (long )__cil_tmp23, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp6));
//#line 44
  __cil_tmp6 = (unsigned long )(& __cil_tmp23);
//#line 44
  store_concrete_value_int((long )__cil_tmp6);
//#line 44
  _cf__getInput(__cil_tmp6);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp25), (long )__cil_tmp25, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp7));
//#line 44
  __cil_tmp7 = (unsigned long )(& __cil_tmp25);
//#line 44
  store_concrete_value_int((long )__cil_tmp7);
//#line 44
  _cf__getInput(__cil_tmp7);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp27), (long )__cil_tmp27, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp8));
//#line 44
  __cil_tmp8 = (unsigned long )(& __cil_tmp27);
//#line 44
  store_concrete_value_int((long )__cil_tmp8);
//#line 44
  _cf__getInput(__cil_tmp8);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp29), (long )__cil_tmp29, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp9));
//#line 44
  __cil_tmp9 = (unsigned long )(& __cil_tmp29);
//#line 44
  store_concrete_value_int((long )__cil_tmp9);
//#line 44
  _cf__getInput(__cil_tmp9);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp31), (long )__cil_tmp31, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp10));
//#line 44
  __cil_tmp10 = (unsigned long )(& __cil_tmp31);
//#line 44
  store_concrete_value_int((long )__cil_tmp10);
//#line 44
  _cf__getInput(__cil_tmp10);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp33), (long )__cil_tmp33, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp11));
//#line 44
  __cil_tmp11 = (unsigned long )(& __cil_tmp33);
//#line 44
  store_concrete_value_int((long )__cil_tmp11);
//#line 44
  _cf__getInput(__cil_tmp11);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp35), (long )__cil_tmp35, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp12));
//#line 44
  __cil_tmp12 = (unsigned long )(& __cil_tmp35);
//#line 44
  store_concrete_value_int((long )__cil_tmp12);
//#line 44
  _cf__getInput(__cil_tmp12);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp37), (long )__cil_tmp37, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp13));
//#line 44
  __cil_tmp13 = (unsigned long )(& __cil_tmp37);
//#line 44
  store_concrete_value_int((long )__cil_tmp13);
//#line 44
  _cf__getInput(__cil_tmp13);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp39), (long )__cil_tmp39, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp14));
//#line 44
  __cil_tmp14 = (unsigned long )(& __cil_tmp39);
//#line 44
  store_concrete_value_int((long )__cil_tmp14);
//#line 44
  _cf__getInput(__cil_tmp14);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp41), (long )__cil_tmp41, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp15));
//#line 44
  __cil_tmp15 = (unsigned long )(& __cil_tmp41);
//#line 44
  store_concrete_value_int((long )__cil_tmp15);
//#line 44
  _cf__getInput(__cil_tmp15);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp43), (long )__cil_tmp43, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp16));
//#line 44
  __cil_tmp16 = (unsigned long )(& __cil_tmp43);
//#line 44
  store_concrete_value_int((long )__cil_tmp16);
//#line 44
  _cf__getInput(__cil_tmp16);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp45), (long )__cil_tmp45, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp18));
//#line 44
  __cil_tmp18 = (unsigned long )(& __cil_tmp45);
//#line 44
  store_concrete_value_int((long )__cil_tmp18);
//#line 44
  _cf__getInput(__cil_tmp18);
//#line 44
  load_to_heap_int((unsigned long )(& __cil_tmp47), (long )__cil_tmp47, 11);
//#line 44
  apply_op(2, 27);
//#line 44
  store_to_var_table((unsigned long )(& __cil_tmp20));
//#line 44
  __cil_tmp20 = (unsigned long )(& __cil_tmp47);
//#line 44
  store_concrete_value_int((long )__cil_tmp20);
//#line 44
  _cf__getInput(__cil_tmp20);
//#line 48
  load_to_heap_int((unsigned long )(& x), (long )x, 11);
//#line 48
  apply_op(2, 27);
//#line 48
  store_to_var_table((unsigned long )(& __cil_tmp22));
//#line 48
  __cil_tmp22 = (unsigned long )(& x);
//#line 48
  store_concrete_value_int((long )__cil_tmp22);
//#line 48
  _cf__getInput(__cil_tmp22);
//#line 49
  load_to_heap_int((unsigned long )(& y), (long )y, 11);
//#line 49
  apply_op(2, 27);
//#line 49
  store_to_var_table((unsigned long )(& __cil_tmp24));
//#line 49
  __cil_tmp24 = (unsigned long )(& y);
//#line 49
  store_concrete_value_int((long )__cil_tmp24);
//#line 49
  _cf__getInput(__cil_tmp24);
//#line 44
  print_testcase();
//#line 50
  argu_push((unsigned long )(& x), 11);
//#line 50
  argu_push((unsigned long )(& y), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp17), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp19), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp21), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp23), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp25), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp27), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp29), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp31), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp33), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp35), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp37), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp39), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp41), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp43), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp45), 11);
//#line 50
  argu_push((unsigned long )(& __cil_tmp47), 11);
//#line 50
  para_num_stack_push(18);
//#line 50
  foo(x, y, __cil_tmp17, __cil_tmp19, __cil_tmp21, __cil_tmp23, __cil_tmp25, __cil_tmp27,
      __cil_tmp29, __cil_tmp31, __cil_tmp33, __cil_tmp35, __cil_tmp37, __cil_tmp39,
      __cil_tmp41, __cil_tmp43, __cil_tmp45, __cil_tmp47);
}
}
//#line 44 "check_print_testcase.c"
void __CAUT_register_types(void) 
{ 
  __CAUT_ctype_t __CAUT_t ;
  int __CAUT_reg_ret ;
  int __cil_tmp3[3] ;
  int __cil_tmp4[1] ;
  int __cil_tmp5[1] ;
  int __cil_tmp6[2] ;
  int __cil_tmp7[1] ;
  int __cil_tmp8[18] ;

  {
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("void", 4, sizeof(void ), 0);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(0, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("char", 4, sizeof(char ), 1);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(1, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("signed char", 11, sizeof(signed char ),
                                          2);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(2, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("short", 5, sizeof(short ), 3);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(3, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("int", 3, sizeof(int ), 4);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(4, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("long", 4, sizeof(long ), 5);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(5, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("long long", 9, sizeof(long long ), 6);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(6, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("unsigned char", 13, sizeof(unsigned char ),
                                          7);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(7, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("unsigned short", 14, sizeof(unsigned short ),
                                          8);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(8, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("unsigned int", 12, sizeof(unsigned int ),
                                          9);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(9, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("unsigned long", 13, sizeof(unsigned long ),
                                          10);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(10, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("unsigned long long", 18, sizeof(unsigned long long ),
                                          11);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(11, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("float", 5, sizeof(float ), 12);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(12, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("double", 6, sizeof(double ), 13);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(13, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_primitive_type("long double", 11, sizeof(long double ),
                                          14);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(14, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_comp_type_struct("d", 1, sizeof(struct d ), 2);
//#line 44
  __CAUT_t = __CAUT_create_comp_member(__CAUT_t, "d1", 2, 4, -1, 0);
//#line 44
  __CAUT_t = __CAUT_create_comp_member(__CAUT_t, "d2", 2, 1, -1, 1);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(20, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_comp_type_struct("A", 1, sizeof(struct A ), 3);
//#line 44
  __CAUT_t = __CAUT_create_comp_member(__CAUT_t, "test", 4, 1, -1, 0);
//#line 44
  __CAUT_t = __CAUT_create_comp_member(__CAUT_t, "tt", 2, 9, -1, 1);
//#line 44
  __CAUT_t = __CAUT_create_comp_member(__CAUT_t, "ddd", 3, 22, -1, 2);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(21, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_pointer_type("d*", 2, 20);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(22, __CAUT_t);
//#line 44
  __cil_tmp3[0] = 0;
//#line 44
  __cil_tmp3[1] = 1;
//#line 44
  __cil_tmp3[2] = 2;
//#line 44
  __CAUT_t = __CAUT_create_enum_type("data", 4, 3, __cil_tmp3);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(23, __CAUT_t);
//#line 44
  __cil_tmp4[0] = 10;
//#line 44
  __CAUT_t = __CAUT_create_func_type("r_void_a_unsigned long_", 23, 1, __cil_tmp4,
                                     0);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(24, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_pointer_type("A*", 2, 21);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(25, __CAUT_t);
//#line 44
  __cil_tmp5[0] = 10;
//#line 44
  __CAUT_t = __CAUT_create_array_type("int[10]", 7, 4, 1, __cil_tmp5);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(26, __CAUT_t);
//#line 44
  __cil_tmp6[0] = 10;
//#line 44
  __cil_tmp6[1] = 12;
//#line 44
  __CAUT_t = __CAUT_create_array_type("int[10][12]", 11, 4, 2, __cil_tmp6);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(27, __CAUT_t);
//#line 44
  __cil_tmp7[0] = 12;
//#line 44
  __CAUT_t = __CAUT_create_array_type("int[12]", 7, 4, 1, __cil_tmp7);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(28, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_func_type("r_int_a_", 8, 0, 0, 4);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(29, __CAUT_t);
//#line 44
  __cil_tmp8[0] = 4;
//#line 44
  __cil_tmp8[1] = 4;
//#line 44
  __cil_tmp8[2] = 4;
//#line 44
  __cil_tmp8[3] = 4;
//#line 44
  __cil_tmp8[4] = 4;
//#line 44
  __cil_tmp8[5] = 4;
//#line 44
  __cil_tmp8[6] = 4;
//#line 44
  __cil_tmp8[7] = 4;
//#line 44
  __cil_tmp8[8] = 4;
//#line 44
  __cil_tmp8[9] = 4;
//#line 44
  __cil_tmp8[10] = 4;
//#line 44
  __cil_tmp8[11] = 4;
//#line 44
  __cil_tmp8[12] = 4;
//#line 44
  __cil_tmp8[13] = 4;
//#line 44
  __cil_tmp8[14] = 4;
//#line 44
  __cil_tmp8[15] = 4;
//#line 44
  __cil_tmp8[16] = 4;
//#line 44
  __cil_tmp8[17] = 4;
//#line 44
  __CAUT_t = __CAUT_create_func_type("r_int_a_int_int_int_int_int_int_int_int_int_int_int_int_int_int_int_int_int_int_",
                                     80, 18, __cil_tmp8, 4);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(30, __CAUT_t);
//#line 44
  __CAUT_t = __CAUT_create_func_type("r_void_a_", 9, 0, 0, 0);
//#line 44
  __CAUT_reg_ret = __CAUT_register_datatype(31, __CAUT_t);
//#line 44
  return;
}
}
void _cf__getInput(unsigned long addr)
{
	int id = get_input_id();
	switch(id)
	{
	case 0:
		get_test_case_int((unsigned long)addr);
		break;
	case 1:
		get_test_case_int((unsigned long)addr);
		break;
	case 2:
		get_test_case_int((unsigned long)addr);
		break;
	case 3:
		get_test_case_int((unsigned long)addr);
		break;
	case 4:
		get_test_case_int((unsigned long)addr);
		break;
	case 5:
		get_test_case_int((unsigned long)addr);
		break;
	case 6:
		get_test_case_int((unsigned long)addr);
		break;
	case 7:
		get_test_case_int((unsigned long)addr);
		break;
	case 8:
		get_test_case_int((unsigned long)addr);
		break;
	case 9:
		get_test_case_int((unsigned long)addr);
		break;
	case 10:
		get_test_case_int((unsigned long)addr);
		break;
	case 11:
		get_test_case_int((unsigned long)addr);
		break;
	case 12:
		get_test_case_int((unsigned long)addr);
		break;
	case 13:
		get_test_case_int((unsigned long)addr);
		break;
	case 14:
		get_test_case_int((unsigned long)addr);
		break;
	case 15:
		get_test_case_int((unsigned long)addr);
		break;
	case 16:
		get_test_case_int((unsigned long)addr);
		break;
	case 17:
		get_test_case_int((unsigned long)addr);
		break;
	}
}
void main(int argc, char *argv[])
{
	init_caut(argc,argv);
	init_coverage_driven_testing_framework();
	while(1){
		init_caut_exec();
		testme();
		solve_caut_exec();
	}
}
